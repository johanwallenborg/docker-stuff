

version: '2.2'

services:
  es01:
    container_name: es01
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    environment:
      - ELASTIC_PASSWORD_FILE=/run/secrets/elasticpassword.txt 
    volumes:
      - ./elastic-password.txt:/run/secrets/elasticpassword.txt
      - ./custom-elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - data01:/usr/share/elasticsearch/data
      - certs:$CERTS_DIR
    ports:
      - 9201:9200
    healthcheck:
      test: curl --cacert $CERTS_DIR/ca/ca.crt -s https://localhost:9201 >/dev/null; if [[ $$? == 52 ]]; then echo 0; else echo 1; fi
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - elastic

  kib01:
      container_name: kib01
      image: docker.elastic.co/kibana/kibana:7.17.9
      volumes:
        - certs:/certs:ro
        - ./kibana.yml:/usr/share/kibana/config/kibana.yml
      ports:
        - 5601:5601
      environment:
        - ELASTICSEARCH_HOSTS=["https://es01:9200"]
        - XPACK_SECURITY_ENABLED=true
        - ELASTICSEARCH_USERNAME=elastic
        - ELASTICSEARCH_PASSWORD=elastic
        - ELASTICSEARCH_SSL_CERTIFICATEAUTHORITIES=/certs/ca/ca.crt
        - ELASTICSEARCH_SSL_VERIFICATIONMODE=certificate
        - SERVER_SSL_ENABLED=false
        - SERVER_SSL_KEY=/certs/kib01/kib01.key
        - SERVER_SSL_CERTIFICATE=/certs/kib01/kib01.crt
        #- server.ssl.password=${KIBANA_CERT_PASSWORD}
        #- xpack.monitoring.elasticsearch.ssl.verificationMode=certificate
      networks:
        - elastic
      depends_on:
        - es01


  wait_until_ready:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.9
    command: /usr/bin/true
    depends_on: {"es01": {"condition": "service_healthy"}}

volumes: {"data01", "certs"}

networks:
  elastic:
